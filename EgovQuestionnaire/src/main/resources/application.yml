server:
  port: 0 # random port

egov:
  page:
    size: 10
    unit: 10

spring:
  application:
    name: EgovQuestionnaire
  main:
    allow-bean-definition-overriding: true
  config:
    import: optional:configserver:http://localhost:8888
  profiles:
    active: local
  datasource:
    driver-class-name: ${datasource.driver-class-name:com.mysql.cj.jdbc.Driver}
    url: ${datasource.url:jdbc:mysql://localhost:3306/com}
    username: ${datasource.username:com}
    password: ${datasource.password:com01}
    hikari:
      maximum-pool-size: ${datasource.hikari.maximum-pool-size:20}
      connection-timeout: ${datasource.hikari.connection-timeout:20000}
      idle-timeout: ${datasource.hikari.idle-timeout:30000}
      minimum-idle: ${datasource.hikari.minimum-idle:5}
      max-lifetime: ${datasource.hikari.max-lifetime:180000}
  jpa:
    hibernate:
      ddl-auto: ${jpa.hibernate.ddl-auto:none}
    open-in-view: ${jpa.open-in-view:false}
    show-sql: ${jpa.show-sql:true}
    properties:
      hibernate:
        format_sql: ${jpa.properties.hibernate.format_sql:true}

logging:
  level:
    org:
      egovframe:
        rte: debug
      springframework:
        boot:
          autoconfigure: error
        web: debug
    egovframework:
      com: debug

eureka:
  client:
    register-with-eureka: true # Eureka 등록 여부
    fetch-registry: true # Eureka 조회 여부
    registry-fetch-interval-seconds: 5 # 클라이어트 측에서 레지스트리를 캐싱하는 시간
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    instance:
      lease-renewal-interval-in-seconds: 3  # 기본값 30초 → 3초로 변경 (더 자주 heartbeat 전송)
      lease-expiration-duration-in-seconds: 10  # 기본값 90초 → 10초로 변경 (서비스 제거 시간 단축)
      instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

management:
  endpoints:
    web:
      exposure:
        include: health, info

org:
  egovframe:
    crypto:
      algorithm: SHA-256
      algorithmKey: egovframe
      algorithmKeyHash: gdyYs/IZqY86VcWhT8emCYfqY1ahw2vtLG+/FzNqtrQ=
